package ar.edu.um.programacion2.jh.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SaleItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaleItemAllPropertiesEquals(SaleItem expected, SaleItem actual) {
        assertSaleItemAutoGeneratedPropertiesEquals(expected, actual);
        assertSaleItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaleItemAllUpdatablePropertiesEquals(SaleItem expected, SaleItem actual) {
        assertSaleItemUpdatableFieldsEquals(expected, actual);
        assertSaleItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaleItemAutoGeneratedPropertiesEquals(SaleItem expected, SaleItem actual) {
        assertThat(expected)
            .as("Verify SaleItem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaleItemUpdatableFieldsEquals(SaleItem expected, SaleItem actual) {
        assertThat(expected)
            .as("Verify SaleItem relevant properties")
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaleItemUpdatableRelationshipsEquals(SaleItem expected, SaleItem actual) {
        assertThat(expected)
            .as("Verify SaleItem relationships")
            .satisfies(e -> assertThat(e.getOption()).as("check option").isEqualTo(actual.getOption()))
            .satisfies(e -> assertThat(e.getExtra()).as("check extra").isEqualTo(actual.getExtra()))
            .satisfies(e -> assertThat(e.getSale()).as("check sale").isEqualTo(actual.getSale()));
    }
}
