package ar.edu.um.programacion2.jh.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CharacteristicAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacteristicAllPropertiesEquals(Characteristic expected, Characteristic actual) {
        assertCharacteristicAutoGeneratedPropertiesEquals(expected, actual);
        assertCharacteristicAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacteristicAllUpdatablePropertiesEquals(Characteristic expected, Characteristic actual) {
        assertCharacteristicUpdatableFieldsEquals(expected, actual);
        assertCharacteristicUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacteristicAutoGeneratedPropertiesEquals(Characteristic expected, Characteristic actual) {
        assertThat(expected)
            .as("Verify Characteristic auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacteristicUpdatableFieldsEquals(Characteristic expected, Characteristic actual) {
        assertThat(expected)
            .as("Verify Characteristic relevant properties")
            .satisfies(e -> assertThat(e.getSupplierForeignId()).as("check supplierForeignId").isEqualTo(actual.getSupplierForeignId()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCharacteristicUpdatableRelationshipsEquals(Characteristic expected, Characteristic actual) {
        assertThat(expected)
            .as("Verify Characteristic relationships")
            .satisfies(e -> assertThat(e.getDevices()).as("check devices").isEqualTo(actual.getDevices()));
    }
}
