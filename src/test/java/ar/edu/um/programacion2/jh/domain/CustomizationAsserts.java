package ar.edu.um.programacion2.jh.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CustomizationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomizationAllPropertiesEquals(Customization expected, Customization actual) {
        assertCustomizationAutoGeneratedPropertiesEquals(expected, actual);
        assertCustomizationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomizationAllUpdatablePropertiesEquals(Customization expected, Customization actual) {
        assertCustomizationUpdatableFieldsEquals(expected, actual);
        assertCustomizationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomizationAutoGeneratedPropertiesEquals(Customization expected, Customization actual) {
        assertThat(expected)
            .as("Verify Customization auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomizationUpdatableFieldsEquals(Customization expected, Customization actual) {
        assertThat(expected)
            .as("Verify Customization relevant properties")
            .satisfies(e -> assertThat(e.getSupplierForeignId()).as("check supplierForeignId").isEqualTo(actual.getSupplierForeignId()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomizationUpdatableRelationshipsEquals(Customization expected, Customization actual) {
        assertThat(expected)
            .as("Verify Customization relationships")
            .satisfies(e -> assertThat(e.getOptions()).as("check options").isEqualTo(actual.getOptions()))
            .satisfies(e -> assertThat(e.getDevices()).as("check devices").isEqualTo(actual.getDevices()));
    }
}
